name: Deploy to EC2

on:
  push:
    branches: 
      - main
  pull_request:
    branches: 
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test --if-present

    - name: Build application
      run: npm run build

    - name: Setup SSH key
      if: github.ref == 'refs/heads/main'
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/docker-key
        chmod 600 ~/.ssh/docker-key
        ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

    - name: Add public key to EC2
      if: github.ref == 'refs/heads/main'
      run: |
        ssh -i ~/.ssh/docker-key ec2-user@${{ secrets.EC2_PUBLIC_IP }} "echo '${{ secrets.EC2_PUBLIC_KEY }}' >> ~/.ssh/authorized_keys"

    - name: Deploy to EC2
      if: github.ref == 'refs/heads/main'
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_PUBLIC_IP }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # 디렉토리 생성
          mkdir -p ${{ secrets.DEPLOY_PATH }}
          cd ${{ secrets.DEPLOY_PATH }}
          
          # 기존 프로젝트 삭제 (있다면)
          rm -rf DongYang-Frontend
          
          # 프로젝트 클론
          git clone https://github.com/Seungkiii/DongYang-Frontend.git
          cd DongYang-Frontend
          
          # 상위 디렉토리로 이동하여 docker-compose 실행
          cd ..
          
          # Docker Compose 파일이 없다면 생성
          if [ ! -f docker-compose.yml ]; then
            cat > docker-compose.yml << 'COMPOSEEOF'
          version: '3.8'

          services:
            # Frontend Service
            frontend:
              build:
                context: ./DongYang-Frontend
                dockerfile: Dockerfile
              container_name: dongyang-frontend
              restart: unless-stopped
              ports:
                - "80:80"
              networks:
                - dongyang-network

          networks:
            dongyang-network:
              driver: bridge
          COMPOSEEOF
          fi
          
          # Frontend 서비스 재시작
          docker-compose down frontend || true
          docker-compose build frontend
          docker-compose up -d frontend
          
          # 로그 확인
          echo "=== Frontend Service 로그 ==="
          docker-compose logs --tail=10 frontend 